apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'packer'
def AAVersion = '4.1.0'

ext.appReleaseDir = ""

def loadProperties() {
    def proFile = file("../gradle.properties")
    Properties p = new Properties()
    proFile.withInputStream { stream->
        p.load(stream)
    }
    appReleaseDir = p.appReleaseDir
}

loadProperties()

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"
    defaultConfig {
        applicationId "com.learn.demo"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0.0011"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        v2 {
            storeFile file("learndemo.jks")
            storePassword "123456"
            keyAlias "learndemo"
            keyPassword "123456"
            v2SigningEnabled true
        }

        v1 {
            storeFile file("learndemo.jks")
            storePassword "123456"
            keyAlias "learndemo"
            keyPassword "123456"
            v2SigningEnabled false
        }

    }

    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }

//        debug{
//            signingConfig signingConfigs.v2
//            minifyEnabled false
//        }

        release {
            signingConfig signingConfigs.v2
            minifyEnabled false
        }

        beta {
            signingConfig signingConfigs.v1
            minifyEnabled false
        }

        alpha {
            minifyEnabled false
        }
    }

//    productFlavors {
//        free {}
//
//        paid {}
//
//        other {}
//    }

    lintOptions {
        abortOnError false
        htmlReport true
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    // 使用 clean assemble 打包时使用以下代码
//    applicationVariants.all{ variant->
//        variant.outputs.each { output->
//            def oldFile = output.outputFile
//            def newName = '';
//            if(variant.buildType.name.equals('release')){
//                // APK输出文件名规则：aiyou-版本名-市场-release.apk
//                def releaseApkName = 'learndemo_' + defaultConfig.versionName + '.apk'
//                // appReleaseDir对应local.properties里面定义的路径，再加上日期（格式：201503011230）文件夹
//                output.outputFile = new File(appReleaseDir + '/', releaseApkName)
//            }
//        }
//    }


}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    apt "org.androidannotations:androidannotations:$AAVersion"//依赖注入
    compile "org.androidannotations:androidannotations-api:$AAVersion"//
    testCompile 'junit:junit:4.12'
    apt 'com.alibaba:arouter-compiler:1.0.1'//
    compile 'com.alibaba:arouter-api:1.0.2'//页面路由
    compile 'com.mcxiaoke.packer-ng:helper:2.0.0'//多渠道打包

    compile 'com.google.dagger:dagger:2.4'
    apt 'com.google.dagger:dagger-compiler:2.4'
    //java注解
    compile 'org.glassfish:javax.annotation:10.0-b28'

    //内存检查 START
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    //内存检查 END

    compile 'com.jakewharton:butterknife:8.8.1'
    apt 'com.jakewharton:butterknife-compiler:8.8.1'

}

packer {
    archiveNameFormat = '${buildType}-v${versionName}-${channel}'
//    archiveOutput = new File(project.rootProject.buildDir, "apks")
      archiveOutput = new File(appReleaseDir)
//    channelList = ['*Douban*', 'Google/', '中文/@#市场', 'Hello@World',
//                   'GradleTest', '20070601!@#$%^&*(){}:"<>?-=[];\',./']
    channelFile = new File(project.rootDir, "markets.txt")
//    channelMap = [
//            "Cat" : project.rootProject.file("channels/cat.txt"),
//            "Dog" : project.rootProject.file("channels/dog.txt"),
//            "Fish": project.rootProject.file("channels/channels.txt")
//    ]
}

apt {
    arguments {
        androidManifestFile variant.outputs[0]?.processResources?.manifestFile
        // if you have multiple outputs (when using splits), you may want to have other index than 0

        // you should set your package name here if you are using different application IDs
        // resourcePackageName "your.package.name"

        // You can set optional annotation processing options here, like these commented options:
        // logLevel 'INFO'
        // logFile '/var/log/aa.log'
        moduleName project.getName();
    }

}